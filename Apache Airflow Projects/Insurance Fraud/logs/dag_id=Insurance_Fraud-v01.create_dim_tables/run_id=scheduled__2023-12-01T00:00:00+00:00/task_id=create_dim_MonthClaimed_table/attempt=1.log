[2023-12-21T16:14:12.135+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Insurance_Fraud-v01.create_dim_tables.create_dim_MonthClaimed_table scheduled__2023-12-01T00:00:00+00:00 [queued]>
[2023-12-21T16:14:12.145+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Insurance_Fraud-v01.create_dim_tables.create_dim_MonthClaimed_table scheduled__2023-12-01T00:00:00+00:00 [queued]>
[2023-12-21T16:14:12.145+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 6
[2023-12-21T16:14:12.153+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_dim_MonthClaimed_table> on 2023-12-01 00:00:00+00:00
[2023-12-21T16:14:12.157+0000] {standard_task_runner.py:57} INFO - Started process 744 to run task
[2023-12-21T16:14:12.160+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Insurance_Fraud-v01.create_dim_tables', 'create_dim_MonthClaimed_table', 'scheduled__2023-12-01T00:00:00+00:00', '--job-id', '29', '--raw', '--subdir', 'DAGS_FOLDER/Insurance_Fraud.py', '--cfg-path', '/tmp/tmpo_km4hd7']
[2023-12-21T16:14:12.162+0000] {standard_task_runner.py:85} INFO - Job 29: Subtask create_dim_MonthClaimed_table
[2023-12-21T16:14:12.219+0000] {task_command.py:416} INFO - Running <TaskInstance: Insurance_Fraud-v01.create_dim_tables.create_dim_MonthClaimed_table scheduled__2023-12-01T00:00:00+00:00 [running]> on host 8e15cdf87c56
[2023-12-21T16:14:12.314+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='dunnbc22' AIRFLOW_CTX_DAG_ID='Insurance_Fraud-v01.create_dim_tables' AIRFLOW_CTX_TASK_ID='create_dim_MonthClaimed_table' AIRFLOW_CTX_EXECUTION_DATE='2023-12-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-12-01T00:00:00+00:00'
[2023-12-21T16:14:12.316+0000] {sql.py:274} INFO - Executing: -- params: table_name, dimension_col, data_type

-- Step 1: Extract Unique Values
CREATE TEMPORARY TABLE unique_values_MonthClaimed AS
SELECT DISTINCT MonthClaimed FROM insurance_fraud_pipeline;

-- Step 2: Create Dimension Table
DROP TABLE IF EXISTS dimension_table_MonthClaimed;
CREATE TABLE dimension_table_MonthClaimed (
    id SERIAL PRIMARY KEY,
    MonthClaimed VARCHAR
);

-- Step 3: Insert unique values into dimension table
INSERT INTO dimension_table_MonthClaimed (MonthClaimed)
SELECT * FROM unique_values_MonthClaimed;
[2023-12-21T16:14:12.326+0000] {base.py:73} INFO - Using connection ID 'postgres_conn' for task execution.
[2023-12-21T16:14:12.337+0000] {base.py:73} INFO - Using connection ID 'postgres_conn' for task execution.
[2023-12-21T16:14:12.349+0000] {sql.py:418} INFO - Running statement: -- params: table_name, dimension_col, data_type

-- Step 1: Extract Unique Values
CREATE TEMPORARY TABLE unique_values_MonthClaimed AS
SELECT DISTINCT MonthClaimed FROM insurance_fraud_pipeline;

-- Step 2: Create Dimension Table
DROP TABLE IF EXISTS dimension_table_MonthClaimed;
CREATE TABLE dimension_table_MonthClaimed (
    id SERIAL PRIMARY KEY,
    MonthClaimed VARCHAR
);

-- Step 3: Insert unique values into dimension table
INSERT INTO dimension_table_MonthClaimed (MonthClaimed)
SELECT * FROM unique_values_MonthClaimed;, parameters: None
[2023-12-21T16:14:12.368+0000] {sql.py:427} INFO - Rows affected: 12
[2023-12-21T16:14:12.394+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=Insurance_Fraud-v01.create_dim_tables, task_id=create_dim_MonthClaimed_table, execution_date=20231201T000000, start_date=20231221T161412, end_date=20231221T161412
[2023-12-21T16:14:12.460+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-12-21T16:14:12.494+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
