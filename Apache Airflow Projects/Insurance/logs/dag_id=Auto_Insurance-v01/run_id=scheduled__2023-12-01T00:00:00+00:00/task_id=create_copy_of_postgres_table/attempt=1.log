[2023-12-19T19:13:48.208+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Auto_Insurance-v01.create_copy_of_postgres_table scheduled__2023-12-01T00:00:00+00:00 [queued]>
[2023-12-19T19:13:48.212+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Auto_Insurance-v01.create_copy_of_postgres_table scheduled__2023-12-01T00:00:00+00:00 [queued]>
[2023-12-19T19:13:48.212+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 6
[2023-12-19T19:13:48.218+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_copy_of_postgres_table> on 2023-12-01 00:00:00+00:00
[2023-12-19T19:13:48.221+0000] {standard_task_runner.py:57} INFO - Started process 297 to run task
[2023-12-19T19:13:48.223+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Auto_Insurance-v01', 'create_copy_of_postgres_table', 'scheduled__2023-12-01T00:00:00+00:00', '--job-id', '3', '--raw', '--subdir', 'DAGS_FOLDER/Auto_Insurance.py', '--cfg-path', '/tmp/tmp7dlyja4s']
[2023-12-19T19:13:48.225+0000] {standard_task_runner.py:85} INFO - Job 3: Subtask create_copy_of_postgres_table
[2023-12-19T19:13:48.266+0000] {task_command.py:416} INFO - Running <TaskInstance: Auto_Insurance-v01.create_copy_of_postgres_table scheduled__2023-12-01T00:00:00+00:00 [running]> on host 757899fef296
[2023-12-19T19:13:48.314+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='dunnbc22' AIRFLOW_CTX_DAG_ID='Auto_Insurance-v01' AIRFLOW_CTX_TASK_ID='create_copy_of_postgres_table' AIRFLOW_CTX_EXECUTION_DATE='2023-12-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-12-01T00:00:00+00:00'
[2023-12-19T19:13:48.315+0000] {sql.py:274} INFO - Executing: -- params: new_table_name, orig_table_name

-- Drop the copy of the table, if it already exists
DROP TABLE IF EXISTS auto_insurance;

-- Create copy of table
CREATE TABLE auto_insurance AS
SELECT * 
FROM auto_insurance;

-- Grant additional permissions on the table
GRANT SELECT, INSERT, UPDATE, DELETE ON auto_insurance TO ***;
[2023-12-19T19:13:48.323+0000] {base.py:73} INFO - Using connection ID 'postgres_conn' for task execution.
[2023-12-19T19:13:48.336+0000] {base.py:73} INFO - Using connection ID 'postgres_conn' for task execution.
[2023-12-19T19:13:48.355+0000] {sql.py:418} INFO - Running statement: -- params: new_table_name, orig_table_name

-- Drop the copy of the table, if it already exists
DROP TABLE IF EXISTS auto_insurance;

-- Create copy of table
CREATE TABLE auto_insurance AS
SELECT * 
FROM auto_insurance;

-- Grant additional permissions on the table
GRANT SELECT, INSERT, UPDATE, DELETE ON auto_insurance TO ***;, parameters: None
[2023-12-19T19:13:48.368+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 280, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 392, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 423, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.InsufficientPrivilege: must be owner of table auto_insurance

[2023-12-19T19:13:48.376+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=Auto_Insurance-v01, task_id=create_copy_of_postgres_table, execution_date=20231201T000000, start_date=20231219T191348, end_date=20231219T191348
[2023-12-19T19:13:48.382+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 3 for task create_copy_of_postgres_table (must be owner of table auto_insurance
; 297)
[2023-12-19T19:13:48.400+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-12-19T19:13:48.425+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
